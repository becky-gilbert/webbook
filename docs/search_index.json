[
["index.html", "Online Behavioral Experiments with jsPsych Welcome", " Online Behavioral Experiments with jsPsych Joshua R. de Leeuw Welcome This book will teach you how to create behavioral experiments using jsPsych. jsPsych is a JavaScript-based framework for developing experiments that run in a web browser. Any device (e.g., desktops, laptops, tablets, and mobile phones) with a modern web browser installed can run jsPsych experiments with no additional installation necessary. Experiments can be delivered via a web server for online participants, or run locally on a computer in a laboratory. Each chapter of this book illustrates a key feature or set of related features of jsPsych by walking you through the creation of a real experiment from the cognitive science literature. If you are brand new to jsPsych (or web-based programming in general), it’s recommended that you work through the chapters in order. Experiments later in the book build off the concepts introduced by earlier experiments. If you are already familiar with jsPsych and are looking to learn about a specific technique, each chapter should be sufficiently self-contained that you can jump around. This book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Suggestions, requests for clarification, corrections, and contributions are welcome! Please use the Issue Tracker in the book’s GitHub repository or open a pull request. This book is written in RMarkdown with bookdown. "],
["programming-for-the-web.html", "1 Programming for the Web", " 1 Programming for the Web This chapter provides a high-level overview of programming for the web. It is intended for readers who have never done any web development. It covers the core concepts of web-based programming, which can be mysterious for new web developers. It also explains how websites are published and gives some advice about the tools that you will want to have on your computer to support effective web development. If you have never done any programming before this chapter won’t teach you how to program. However, it should make learning to program a bit easier by clarifying how all the pieces of a website fit together. Chapter 2 won’t assume that you have any programming experience, so one way to learn is to build the experiments in this book, perhaps experimenting with changes to the examples to test and extend your knowledge. Another approach would be to spend some time learning the basics of web programming before moving on to Chapter 2. There are plenty of high-quality online courses and tutorials that teach the basics. "],
["how-a-website-works.html", "1.1 How a website works", " 1.1 How a website works When you open a browser and type in the URL of this book (http://book.jspsych.org) lots of things have to happen in order for you to see the website. A connection is established between your computer and another computer that “serves” the website. One or more files are then transferred from the server to your computer. These files include HTML documents, CSS stylesheets, JavaScript files, and media elements like audio files and images. As a developer, your role is to create all of the files that are needed to render the website as you want it. A crticial point to remember as a new web developer is that it is the job of the web browser to transform this set of files into a website. As a developer, you are providing a (very detailed) “recipe” and the browser is assembling the final dish. Fortunately, browsers are far more precise than chefs and usually websites look the same regardless of which browser is doing the rendering. This is thanks to a commonly agreed upon set of standards that browser developers follow. However, these standards have some ambiguity and as a result there are times when a website will look exactly like you want it to in one browser but not in another. "],
["one-website-three-languages.html", "1.2 One website, three languages", " 1.2 One website, three languages One of the challenging aspects of web development is that the programmer needs to know three different languages: HTML, CSS, and JavaScript. Each language is responsible for a different kind of information that the web browser needs in order to render the final website. HTML defines the structure of the elements on a website, such as the presence of text and images. CSS controls how those elements look. If you want to change the size of an image, the color of a background, or the font of a paragraph, you’ll be using CSS. HTML and CSS are both markup languages. [Need description of what that means]. JavaScript, on the other hand, is a true programming language. In addition to all the normal kinds of computation that programming langauges generally allow, JavaScript is especially good at interacting with HTML and CSS. JavaScript can manipulate the HTML and CSS of a website, allowing the programmer to specify rules about when certain elements on the page should be added or removed (manipulating HTML) and when their appearance should change (manipulating CSS). These interactions can produce very simple results, such as changing the size of an image when the user clicks on it, or very complex ones, such as the development of a video game entirely in HTML, CSS, and JavaScript. To create a simple experiment in jsPsych, you only need to have a basic familiarity with JavaScript. There is minimal HTML and CSS in the first few experiments in this book. However, if you want maximal flexibility over what content is in the screen and how it appears, you will need to become familiar with HTML and CSS. As you will discover, jsPsych is designed to allow users who are comfortable manipulating HTML and CSS full control over the output. [possible figure here with two different jsPsych examples, one simple one fancy]. 1.2.1 HTML basic structure nesting attributes 1.2.2 CSS three places where styles can go. inheritance 1.2.3 JavaScript JS as a programming language How JS interacts with HTML and CSS 1.2.4 How jsPsych uses HTML/CSS/JS "],
["publishing-a-website.html", "1.3 Publishing a website", " 1.3 Publishing a website "],
["tools-for-web-development.html", "1.4 Tools for web development", " 1.4 Tools for web development 1.4.1 Editor 1.4.2 Browser developer tools 1.4.3 SFTP client 1.4.4 Database client "]
]
